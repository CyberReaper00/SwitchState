--- original.c	2025-06-15 15:17:35.492684035 +0500
+++ dwm.c	2025-05-25 10:10:31.564985125 +0500
@@ -32,10 +32,12 @@
 #include <sys/wait.h>
 #include <X11/cursorfont.h>
 #include <X11/keysym.h>
+#include <X11/XF86keysym.h>
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
 #include <X11/Xproto.h>
 #include <X11/Xutil.h>
+#include <pthread.h>
 #ifdef XINERAMA
 #include <X11/extensions/Xinerama.h>
 #endif /* XINERAMA */
@@ -50,7 +52,6 @@
 #define INTERSECT(x,y,w,h,m)    (MAX(0, MIN((x)+(w),(m)->wx+(m)->ww) - MAX((x),(m)->wx)) \
                                * MAX(0, MIN((y)+(h),(m)->wy+(m)->wh) - MAX((y),(m)->wy)))
 #define ISVISIBLE(C)            ((C->tags & C->mon->tagset[C->mon->seltags]))
-#define LENGTH(X)               (sizeof X / sizeof X[0])
 #define MOUSEMASK               (BUTTONMASK|PointerMotionMask)
 #define WIDTH(X)                ((X)->w + 2 * (X)->bw)
 #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
@@ -271,6 +272,49 @@
 /* configuration, allows nested code to access above variables */
 #include "config.h"
 
+extern const char **current_theme;
+const char *colors[2][3];
+
+
+void
+update_colors(void) {
+    colors[SchemeNorm][0] = (char *)current_theme[0];
+    colors[SchemeNorm][1] = (char *)current_theme[1];
+    colors[SchemeNorm][2] = (char *)current_theme[2];
+
+    colors[SchemeSel][0] = (char *)current_theme[0];
+    colors[SchemeSel][1] = (char *)current_theme[2];
+    colors[SchemeSel][2] = (char *)current_theme[2];
+}
+
+void
+check_theme(Display *dpy) {
+    char *name = NULL;
+    Window root = DefaultRootWindow(dpy);
+
+    if (XFetchName(dpy, root, &name)) {
+	if (name && strstr(name, "change")) {
+	    current_theme = red;
+	    update_colors();
+	}
+	XFree(name);
+    }
+}
+
+void *
+theme_checker(void *arg) {
+    Display *dpy_thread = XOpenDisplay(NULL);
+    if (!dpy_thread) return NULL;
+
+    for (;;) {
+	check_theme(dpy_thread);
+	usleep(100000);
+    }
+
+    XCloseDisplay(dpy_thread);
+    return NULL;
+}
+
 /* compile-time check if all tags fit into an unsigned int bit array. */
 struct NumTags { char limitexceeded[LENGTH(tags) > 31 ? -1 : 1]; };
 
@@ -1649,7 +1693,7 @@
 {
 	struct sigaction sa;
 
-	if (arg->v == dmenucmd)
+	if (arg->v == roficmd)
 		dmenumon[0] = '0' + selmon->num;
 	if (fork() == 0) {
 		if (dpy)
@@ -1851,7 +1895,7 @@
 }
 
 void
-updateclientlist()
+updateclientlist(void)
 {
 	Client *c;
 	Monitor *m;
@@ -2140,8 +2184,10 @@
 	pop(c);
 }
 
+
 int
 main(int argc, char *argv[])
+
 {
 	if (argc == 2 && !strcmp("-v", argv[1]))
 		die("dwm-"VERSION);
@@ -2152,12 +2198,15 @@
 	if (!(dpy = XOpenDisplay(NULL)))
 		die("dwm: cannot open display");
 	checkotherwm();
+	update_colors();
 	setup();
 #ifdef __OpenBSD__
 	if (pledge("stdio rpath proc exec", NULL) == -1)
 		die("pledge");
 #endif /* __OpenBSD__ */
 	scan();
+	pthread_t theme_thread;
+	pthread_create(&theme_thread, NULL, theme_checker, NULL);
 	run();
 	cleanup();
 	XCloseDisplay(dpy);
